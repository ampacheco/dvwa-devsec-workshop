# Jobs Name Modified
name: 🚀🚀 Basic 👨‍💻Dev - Sec🪲 Ops📉  Workflow 🚀🚀  
on:
  workflow_run:
    workflows: [Pre Work]
    types:
      - completed
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: ✅ Build Workflow
      run: echo "✅ Dummy Step, compile, package, create container for application and ..."

  SAST:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: ✅ Checkout
      uses: actions/checkout@v2

    - name: ✅ SAST
      run: |
        env | grep -E "GITHUB_ACTIONS|GITHUB_RUN_NUMBER|GITHUB_REF_NAME|GITHUB_SHA" > /tmp/env
        docker pull registry.fortidevsec.forticloud.com/fdevsec_sast:latest
        docker run --rm --env-file /tmp/env --mount type=bind,source=$PWD,target=/scan registry.fortidevsec.forticloud.com/fdevsec_sast:latest
    
  deploy:
    runs-on: ubuntu-latest
    needs: SAST

    steps:
    - name: ✅ Azure Login
      uses: azure/login@v1
      with:
        creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'
            
    - name: ✅ Deploy the App
      uses: Azure/cli@v1.0.7
      with:
        azcliversion: 2.30.0
        inlineScript: | 
          az group create -n ${{ vars.AZ_ACI_DNS_PREFIX }}-rg -l eastus
          az container create --name ${{ vars.AZ_ACI_DNS_PREFIX }} --dns-name-label ${{ vars.AZ_ACI_DNS_PREFIX }} --image ${{ vars.IMAGE_NAME }} -g ${{ vars.AZ_ACI_DNS_PREFIX }}-rg --registry-username ${{ secrets.ACR_USERNAME }} --registry-password ${{ secrets.ACR_USERPASSWORD }}
    
  DAST:
    runs-on: ubuntu-latest
    needs: deploy
    
    steps:
    - name: ✅ Checkout
      uses: actions/checkout@v2

    - name: ✅ DAST
      run: | 
        env | grep -E "GITHUB_ACTIONS|GITHUB_RUN_NUMBER|GITHUB_REF_NAME|GITHUB_SHA" > /tmp/env
        docker pull registry.fortidevsec.forticloud.com/fdevsec_dast:latest
        docker run --rm --env-file /tmp/env --mount type=bind,source=$PWD,target=/scan registry.fortidevsec.forticloud.com/fdevsec_dast:latest

  clean-up-az:
    runs-on: ubuntu-latest
    needs: DAST

    steps:
    - name: ✅ Azure Login
      uses: azure/login@v1
      with:
        creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'
            
    - name: ✅ Clean Up Azure Container Instances App
      uses: Azure/cli@v1.0.7
      with:
        azcliversion: 2.30.0
        inlineScript: | 
          az group delete -n ${{ vars.AZ_ACI_DNS_PREFIX }}-rg -y
  
